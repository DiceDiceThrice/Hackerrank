Calculates the total number of shifts performed during an insertion sort operation, which serves as a measure of the algorithm's running time complexity. The implementation follows the standard insertion sort approach but includes a counter that increments each time an element is shifted to the right during the sorting process. As the algorithm iterates through the array, it tracks how many position moves are required to properly place each element within the growing sorted segment. The final count of all these shifts provides a quantitative metric for the sorting effort, with higher counts indicating arrays that are more out of order and require more operations to sort.